{"ast":null,"code":"var _jsxFileName = \"/Users/johncross/Desktop/10xCodeCamp/white-bear-fullstack/client/src/component/ui/SignUp.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\"; //functions go in react classes\n\nclass SignUp extends React.Component {\n  //we can set the state in constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayingInputs: false,\n      emailError: \"\",\n      passwordError: \"\",\n      hasEmailError: false,\n      hasPasswordError: false\n    };\n  }\n\n  showInputs() {\n    this.setState({\n      isDisplayingInputs: true\n    });\n  }\n\n  async setEmailState(emailInput) {\n    const lowerCasedEmailInput = emailInput.toLowerCase();\n    console.log(lowerCasedEmailInput);\n    if (emailInput === \"\") this.setState({\n      emailError: \"Please enter your email address.\",\n      hasEmailError: true\n    });else if (EMAIL_REGEX.test(lowerCasedEmailInput) === false) {\n      this.setState({\n        emailError: \"Please enter a valid email address.\",\n        hasEmailError: true\n      });\n    } else {\n      this.setState({\n        emailError: \"\",\n        hasEmailError: false\n      });\n    }\n  }\n\n  checkHasLocalPart(passwordInput, emailInput) {\n    const localPart = emailInput.split(\"@\")[0];\n    if (localPart === \"\") return false;else if (localPart.length < 4) return false;else return passwordInput.includes(localPart);\n  }\n\n  async setPasswordState(passwordInput, emailInput) {\n    console.log(passwordInput);\n    const uniqChars = [...new Set(passwordInput)];\n\n    if (passwordInput === \"\") {\n      this.setState({\n        passwordError: \"Please create a password.\",\n        hasPasswordError: true\n      });\n    } else if (passwordInput.length < 9) {\n      this.setState({\n        passwordError: \"Your password must be at least 9 characters.\",\n        hasPasswordError: true\n      });\n    } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n      this.setState({\n        passwordError: \"For your safety, your password cannot contain your email address.\",\n        hasPasswordError: true\n      });\n    } else if (uniqChars.length < 3) {\n      this.setState({\n        passwordError: \"For your safety, your password must contain at least 3 unique characters.\",\n        hasPasswordError: true\n      });\n    } else {\n      this.setState({\n        passwordError: \"\",\n        hasPasswordError: false\n      });\n    }\n  }\n\n  async validateAndCreateUser() {\n    const emailInput = document.getElementById(\"signup-email-input\").value;\n    const passwordInput = document.getElementById(\"signup-password-input\").value;\n    await this.setEmailState(emailInput);\n    await this.setPasswordState(passwordInput, emailInput);\n\n    if (this.state.hasEmailError === false && this.state.hasPasswordError === false) {\n      const user = {\n        id: getUuid(),\n        email: emailInput,\n        password: hash(passwordInput),\n        createdAt: Date.now()\n      };\n      console.log(\"Created user object for POST: \", user); // Mimic API response:\n\n      axios.get(\"https://raw.githubusercontent.com/john-william-cross/white-bear-mpa/910aac8722e9f00ab98100e2eb50d90943f533f3/src/mock-data/user.json\").then(res => {\n        // handle success\n        this.props.dispatch({\n          type: actions.UPDATE_CURRENT_USER,\n          payload: res.data\n        });\n      }).catch(error => {\n        // handle error\n        console.log(error);\n      }); //redirect the user\n\n      this.props.history.push(\"/create-answer\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-6 mb-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body text-dark font-sans-serif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"show-sign-up-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"font-serif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, \"Nice to meet you\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-2 mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, \"Sign up for White Bear. Free forever.\"), !this.state.isDisplayingInputs && /*#__PURE__*/React.createElement(Link, {\n      to: \"\",\n      className: \"sign-up-prompt btn btn-block btn-success btn-sm mt-4\",\n      onClick: () => {\n        this.showInputs();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 28\n      }\n    }, \"Sign up\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"email-and-create-password \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 22\n      }\n    }, this.state.isDisplayingInputs && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sign-up mt-1 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 31\n      }\n    }, \"Let's get you signed up.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-muted mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 31\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"signup-email-input\",\n      className: classnames({\n        \"form-control\": true,\n        \"mb-2\": true,\n        \"is-invalid\": this.state.emailError\n      }),\n      type: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 31\n      }\n    }), this.state.hasEmailError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 34\n      }\n    }, this.state.emailError), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger mb-4\",\n      id: \"sign-up-email-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 31\n      }\n    }, \"Create a password\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"signup-password-input\",\n      className: classnames({\n        \"form-control\": true,\n        \"text-muted\": true,\n        \"mt-2\": true,\n        lead: true,\n        \"is-invalid\": this.state.hasPasswordError\n      }),\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 31\n      }\n    }), this.state.hasPasswordError && /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 34\n      }\n    }, this.state.passwordError), /*#__PURE__*/React.createElement(\"button\", {\n      to: \"create-answer\",\n      className: \"btn btn-block btn-success btn-lg mt-4\",\n      onClick: () => {\n        this.validateAndCreateUser();\n      },\n      id: \"lets-go-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 31\n      }\n    }, \"Let's go!\")))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  //Everything down here is global state\n  return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(SignUp));","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/white-bear-fullstack/client/src/component/ui/SignUp.js"],"names":["React","Link","classnames","hash","v4","getUuid","EMAIL_REGEX","connect","actions","axios","withRouter","SignUp","Component","constructor","props","state","isDisplayingInputs","emailError","passwordError","hasEmailError","hasPasswordError","showInputs","setState","setEmailState","emailInput","lowerCasedEmailInput","toLowerCase","console","log","test","checkHasLocalPart","passwordInput","localPart","split","length","includes","setPasswordState","uniqChars","Set","validateAndCreateUser","document","getElementById","value","user","id","email","password","createdAt","Date","now","get","then","res","dispatch","type","UPDATE_CURRENT_USER","payload","data","catch","error","history","push","render","lead","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport hash from \"object-hash\";\nimport { v4 as getUuid } from \"uuid\";\nimport { EMAIL_REGEX } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport actions from \"../../store/actions\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\n//functions go in react classes\nclass SignUp extends React.Component {\n   //we can set the state in constructor\n   constructor(props) {\n      super(props);\n      this.state = {\n         isDisplayingInputs: false,\n         emailError: \"\",\n         passwordError: \"\",\n         hasEmailError: false,\n         hasPasswordError: false,\n      };\n   }\n\n   showInputs() {\n      this.setState({\n         isDisplayingInputs: true,\n      });\n   }\n\n   async setEmailState(emailInput) {\n      const lowerCasedEmailInput = emailInput.toLowerCase();\n      console.log(lowerCasedEmailInput);\n\n      if (emailInput === \"\")\n         this.setState({\n            emailError: \"Please enter your email address.\",\n            hasEmailError: true,\n         });\n      else if (EMAIL_REGEX.test(lowerCasedEmailInput) === false) {\n         this.setState({\n            emailError: \"Please enter a valid email address.\",\n            hasEmailError: true,\n         });\n      } else {\n         this.setState({ emailError: \"\", hasEmailError: false });\n      }\n   }\n\n   checkHasLocalPart(passwordInput, emailInput) {\n      const localPart = emailInput.split(\"@\")[0];\n      if (localPart === \"\") return false;\n      else if (localPart.length < 4) return false;\n      else return passwordInput.includes(localPart);\n   }\n\n   async setPasswordState(passwordInput, emailInput) {\n      console.log(passwordInput);\n\n      const uniqChars = [...new Set(passwordInput)];\n\n      if (passwordInput === \"\") {\n         this.setState({\n            passwordError: \"Please create a password.\",\n            hasPasswordError: true,\n         });\n      } else if (passwordInput.length < 9) {\n         this.setState({\n            passwordError: \"Your password must be at least 9 characters.\",\n            hasPasswordError: true,\n         });\n      } else if (this.checkHasLocalPart(passwordInput, emailInput)) {\n         this.setState({\n            passwordError:\n               \"For your safety, your password cannot contain your email address.\",\n            hasPasswordError: true,\n         });\n      } else if (uniqChars.length < 3) {\n         this.setState({\n            passwordError:\n               \"For your safety, your password must contain at least 3 unique characters.\",\n            hasPasswordError: true,\n         });\n      } else {\n         this.setState({ passwordError: \"\", hasPasswordError: false });\n      }\n   }\n\n   async validateAndCreateUser() {\n      const emailInput = document.getElementById(\"signup-email-input\").value;\n      const passwordInput = document.getElementById(\"signup-password-input\")\n         .value;\n      await this.setEmailState(emailInput);\n      await this.setPasswordState(passwordInput, emailInput);\n      if (\n         this.state.hasEmailError === false &&\n         this.state.hasPasswordError === false\n      ) {\n         const user = {\n            id: getUuid(),\n            email: emailInput,\n            password: hash(passwordInput),\n            createdAt: Date.now(),\n         };\n         console.log(\"Created user object for POST: \", user);\n         // Mimic API response:\n         axios\n            .get(\n               \"https://raw.githubusercontent.com/john-william-cross/white-bear-mpa/910aac8722e9f00ab98100e2eb50d90943f533f3/src/mock-data/user.json\"\n            )\n            .then((res) => {\n               // handle success\n               this.props.dispatch({\n                  type: actions.UPDATE_CURRENT_USER,\n                  payload: res.data,\n               });\n            })\n            .catch((error) => {\n               // handle error\n               console.log(error);\n            });\n         //redirect the user\n         this.props.history.push(\"/create-answer\");\n      }\n   }\n\n   render() {\n      return (\n         <div className=\"col-12 col-md-6 mb-8\">\n            <div className=\"card\">\n               <div className=\"card-body text-dark font-sans-serif\">\n                  <div className=\"landing-page\">\n                     <div className=\"show-sign-up-info\">\n                        <h2 className=\"font-serif\">Nice to meet you</h2>\n                        <p className=\"mt-2 mb-2\">\n                           Sign up for White Bear. Free forever.\n                        </p>\n\n                        {!this.state.isDisplayingInputs && (\n                           <Link\n                              to=\"\"\n                              className=\"sign-up-prompt btn btn-block btn-success btn-sm mt-4\"\n                              onClick={() => {\n                                 this.showInputs();\n                              }}\n                           >\n                              Sign up\n                           </Link>\n                        )}\n                     </div>\n                     <div className=\"email-and-create-password \">\n                        {this.state.isDisplayingInputs && (\n                           <>\n                              <p className=\"sign-up mt-1 mb-3\">\n                                 Let's get you signed up.\n                              </p>\n                              <p className=\"lead text-muted mt-2\">\n                                 Email address\n                              </p>\n\n                              <input\n                                 id=\"signup-email-input\"\n                                 className={classnames({\n                                    \"form-control\": true,\n                                    \"mb-2\": true,\n                                    \"is-invalid\": this.state.emailError,\n                                 })}\n                                 type=\"email\"\n                              />\n                              {this.state.hasEmailError && (\n                                 <p className=\"text-danger\">\n                                    {this.state.emailError}\n                                 </p>\n                              )}\n                              <p\n                                 className=\"text-danger mb-4\"\n                                 id=\"sign-up-email-error\"\n                              ></p>\n                              <p className=\"lead text-muted\">\n                                 Create a password\n                              </p>\n\n                              <input\n                                 id=\"signup-password-input\"\n                                 className={classnames({\n                                    \"form-control\": true,\n                                    \"text-muted\": true,\n                                    \"mt-2\": true,\n                                    lead: true,\n                                    \"is-invalid\": this.state.hasPasswordError,\n                                 })}\n                                 type=\"password\"\n                              />\n                              {this.state.hasPasswordError && (\n                                 <p className=\"text-danger\">\n                                    {this.state.passwordError}\n                                 </p>\n                              )}\n\n                              <button\n                                 to=\"create-answer\"\n                                 className=\"btn btn-block btn-success btn-lg mt-4\"\n                                 onClick={() => {\n                                    this.validateAndCreateUser();\n                                 }}\n                                 id=\"lets-go-button\"\n                              >\n                                 Let's go!\n                              </button>\n                           </>\n                        )}\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      );\n   }\n}\nfunction mapStateToProps(state) {\n   //Everything down here is global state\n   return {};\n}\n\nexport default withRouter(connect(mapStateToProps)(SignUp));\n"]},"metadata":{},"sourceType":"module"}