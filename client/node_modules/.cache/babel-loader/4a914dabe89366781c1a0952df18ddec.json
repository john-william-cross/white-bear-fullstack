{"ast":null,"code":"var _jsxFileName = \"/Users/johncross/Desktop/10xCodeCamp/white-bear-fullstack/client/src/component/pages/Edit.js\";\nimport React from \"react\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport saveIcon from \"../../icons/save.svg\";\nimport { Link } from \"react-router-dom\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { safelyParseJson } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport without from \"lodash/without\";\nimport actions from \"../../store/actions\"; // import axios from \"axios\";\n\nconst memoryCard = memoryCards[3];\n\nclass Edit extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(`in the edit component`);\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: memoryCard.imagery,\n      isShowingDeleteButton: false\n    };\n  }\n\n  updateState(e) {\n    let value = e.target.value;\n\n    if (value === \"true\" || value === \"false\") {\n      value = safelyParseJson(value);\n    }\n\n    this.setState({\n      [e.target.name]: value\n    });\n  }\n\n  checkHasInvalidCharCount() {\n    if (this.state.imageryText.length > MAX_CARD_CHARS || this.state.answerText.length > MAX_CARD_CHARS || this.state.imageryText.length === 0 || this.state.answerText.length === 0) {\n      return true;\n    } else return false;\n  }\n\n  setImageryText(e) {\n    this.setState({\n      imageryText: e.target.value\n    });\n    console.log(e.target, e.target.value);\n  }\n\n  setAnswerText(e) {\n    this.setState({\n      answerText: e.target.value\n    });\n    console.log(e.target.value);\n  }\n\n  deleteCard() {\n    // TODO: delete from database\n    if (this.props.editableCard.prevRoute === \"/review-answer\") {\n      this.deleteCardFromStore();\n    }\n\n    if (this.props.editableCard.prevRoute === \"/all-cards\") {\n      this.props.history.push(\"/all-cards\");\n    }\n  }\n\n  deleteCardFromStore() {\n    const deletedCard = this.props.editableCard.card;\n    const cards = this.props.queue.cards;\n    const filteredCards = without(cards, deletedCard);\n    console.log(filteredCards);\n    this.props.dispatch({\n      type: actions.STORE_QUEUED_CARDS,\n      payload: filteredCards\n    });\n\n    if (filteredCards[this.props.queue.index] === undefined) {\n      this.props.history.push(\"/review-empty\");\n    } else {\n      this.props.history.push(\"/review-imagery\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center lead text-muted my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Edit card\"), isEmpty(this.props.editableCard) === false && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align-items-start mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"6\",\n      defaultValue: this.props.editableCard.card.imagery,\n      onChange: e => this.setImageryText(e) //remember, \"this\" gives us access to the entire class\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"6\",\n      defaultValue: this.props.editableCard.card.answer,\n      onChange: e => this.setAnswerText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"float-right mt-2 mb-5 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 28\n      }\n    }, \"Top: \\xA0\", this.state.imageryText.length, \"/\", MAX_CARD_CHARS), \" \", \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.answerText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 28\n      }\n    }, \"Bottom:\\xA0\", this.state.answerText.length, \"/\", MAX_CARD_CHARS)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-n5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: \"btn btn-link mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 22\n      }\n    }, \"Discard changes\"), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.editableCard.prevRoute,\n      className: classnames(\"btn btn-primary btn-lg float-right\", {\n        disabled: this.checkHasInvalidCharCount()\n      }),\n      id: \"save-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: saveIcon,\n      alt: \"\",\n      width: \"20px\",\n      style: {\n        marginBottom: \"3px\",\n        marginRight: \"4px\",\n        marginLeft: \"-5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }), \"Save\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center lead text-muted my-2 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"Card properties\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, \"Created on:\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.createdAt, \"MMM. d, y\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, \"Last attempt:\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.lastAttemptAt, \"MMM. d, y\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, \"Next attempt:\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, toDisplayDate(this.props.editableCard.card.nextAttemptAt, \"MMM. d, y\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, \"Consecutives:\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, this.props.editableCard.card.totalSuccessfulAttempts))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox custom-control-inline float-left mr-0 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"custom-control-input\",\n      id: \"isShowingDeleteButton\",\n      checked: this.state.isShowingDeleteButton //we are accessing the whole class of Home, then accessing the state of it,\n      //then accessing the isAdvanced property from the state object\n      ,\n      name: \"isShowingDeleteButton\",\n      value: !this.state.isShowingDeleteButton,\n      onChange: e => {\n        this.updateState(e); //again, this refers to the whole component\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-control-label mb-2 text-muted\",\n      htmlFor: \"isShowingDeleteButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 22\n      }\n    }, \"Show delete button\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }, this.state.isShowingDeleteButton && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger\",\n      onClick: () => {\n        this.deleteCard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, \"Delete this card\"))));\n  }\n\n} //comment\n\n\nfunction mapStateToProps(state) {\n  //Everything down here is global state\n  return {\n    //if you need to access something, put it here\n    editableCard: state.editableCard,\n    queue: state.queue\n  };\n}\n\nexport default connect(mapStateToProps)(Edit);","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/white-bear-fullstack/client/src/component/pages/Edit.js"],"names":["React","AppTemplate","Link","memoryCards","toDisplayDate","classnames","checkIsOver","MAX_CARD_CHARS","safelyParseJson","connect","isEmpty","without","actions","memoryCard","Edit","Component","constructor","props","console","log","state","answerText","answer","imageryText","imagery","isShowingDeleteButton","updateState","e","value","target","setState","name","checkHasInvalidCharCount","length","setImageryText","setAnswerText","deleteCard","editableCard","prevRoute","deleteCardFromStore","history","push","deletedCard","card","cards","queue","filteredCards","dispatch","type","STORE_QUEUED_CARDS","payload","index","undefined","render","disabled","saveIcon","marginBottom","marginRight","marginLeft","createdAt","lastAttemptAt","nextAttemptAt","totalSuccessfulAttempts","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport saveIcon from \"../../icons/save.svg\";\nimport { Link } from \"react-router-dom\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport toDisplayDate from \"date-fns/format\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport { safelyParseJson } from \"../../utils/helpers\";\nimport { connect } from \"react-redux\";\nimport isEmpty from \"lodash/isEmpty\";\nimport without from \"lodash/without\";\nimport actions from \"../../store/actions\";\n// import axios from \"axios\";\n\nconst memoryCard = memoryCards[3];\n\nclass Edit extends React.Component {\n   constructor(props) {\n      super(props);\n\n      console.log(`in the edit component`);\n      this.state = {\n         answerText: memoryCard.answer,\n         imageryText: memoryCard.imagery,\n         isShowingDeleteButton: false,\n      };\n   }\n\n   updateState(e) {\n      let value = e.target.value;\n      if (value === \"true\" || value === \"false\") {\n         value = safelyParseJson(value);\n      }\n      this.setState({ [e.target.name]: value });\n   }\n\n   checkHasInvalidCharCount() {\n      if (\n         this.state.imageryText.length > MAX_CARD_CHARS ||\n         this.state.answerText.length > MAX_CARD_CHARS ||\n         this.state.imageryText.length === 0 ||\n         this.state.answerText.length === 0\n      ) {\n         return true;\n      } else return false;\n   }\n\n   setImageryText(e) {\n      this.setState({ imageryText: e.target.value });\n      console.log(e.target, e.target.value);\n   }\n\n   setAnswerText(e) {\n      this.setState({ answerText: e.target.value });\n      console.log(e.target.value);\n   }\n\n   deleteCard() {\n      // TODO: delete from database\n      if (this.props.editableCard.prevRoute === \"/review-answer\") {\n         this.deleteCardFromStore();\n      }\n      if (this.props.editableCard.prevRoute === \"/all-cards\") {\n         this.props.history.push(\"/all-cards\");\n      }\n   }\n\n   deleteCardFromStore() {\n      const deletedCard = this.props.editableCard.card;\n      const cards = this.props.queue.cards;\n      const filteredCards = without(cards, deletedCard);\n      console.log(filteredCards);\n      this.props.dispatch({\n         type: actions.STORE_QUEUED_CARDS,\n         payload: filteredCards,\n      });\n      if (filteredCards[this.props.queue.index] === undefined) {\n         this.props.history.push(\"/review-empty\");\n      } else {\n         this.props.history.push(\"/review-imagery\");\n      }\n   }\n\n   render() {\n      return (\n         <AppTemplate>\n            <p className=\"text-center lead text-muted my-2\">Edit card</p>\n            {isEmpty(this.props.editableCard) === false && (\n               <>\n                  <div className=\"align-items-start mb-5\">\n                     <div className=\"app-card\">\n                        <div className=\"card\">\n                           <div className=\"card-body bg-primary\">\n                              <textarea\n                                 rows=\"6\"\n                                 defaultValue={\n                                    this.props.editableCard.card.imagery\n                                 }\n                                 onChange={(e) => this.setImageryText(e)} //remember, \"this\" gives us access to the entire class\n                              ></textarea>\n                           </div>\n                        </div>\n\n                        <div className=\"card\">\n                           <div className=\"card-body bg-secondary\">\n                              <textarea\n                                 rows=\"6\"\n                                 defaultValue={\n                                    this.props.editableCard.card.answer\n                                 }\n                                 onChange={(e) => this.setAnswerText(e)}\n                              ></textarea>\n                           </div>\n                        </div>\n\n                        <p className=\"float-right mt-2 mb-5 text-muted\">\n                           {\" \"}\n                           <span\n                              className={classnames({\n                                 \"text-danger\": checkIsOver(\n                                    this.state.imageryText,\n                                    MAX_CARD_CHARS\n                                 ),\n                              })}\n                           >\n                              Top: &nbsp;\n                              {this.state.imageryText.length}/{MAX_CARD_CHARS}\n                           </span>{\" \"}\n                           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\" \"}\n                           <span\n                              className={classnames({\n                                 \"text-danger\": checkIsOver(\n                                    this.state.answerText,\n                                    MAX_CARD_CHARS\n                                 ),\n                              })}\n                           >\n                              Bottom:&nbsp;\n                              {this.state.answerText.length}/{MAX_CARD_CHARS}\n                           </span>\n                        </p>\n\n                        <div className=\"clearfix\"></div>\n                     </div>\n                  </div>\n                  <div className=\"mt-n5\">\n                     <Link\n                        to={this.props.editableCard.prevRoute}\n                        className=\"btn btn-link mb-5\"\n                     >\n                        Discard changes\n                     </Link>\n                     <Link\n                        to={this.props.editableCard.prevRoute}\n                        className={classnames(\n                           \"btn btn-primary btn-lg float-right\",\n                           {\n                              disabled: this.checkHasInvalidCharCount(),\n                           }\n                        )}\n                        id=\"save-card\"\n                     >\n                        <img\n                           src={saveIcon}\n                           alt=\"\"\n                           width=\"20px\"\n                           style={{\n                              marginBottom: \"3px\",\n                              marginRight: \"4px\",\n                              marginLeft: \"-5px\",\n                           }}\n                        />\n                        Save\n                     </Link>\n                  </div>\n                  <p className=\"text-center lead text-muted my-2 mb-4\">\n                     Card properties\n                  </p>\n                  <div className=\"row mb-1\">\n                     <div className=\"col-4\">\n                        <p className=\"text-muted\">Created on:</p>\n                     </div>\n                     <div className=\"col-4\">\n                        <p>\n                           {toDisplayDate(\n                              this.props.editableCard.card.createdAt,\n                              \"MMM. d, y\"\n                           )}\n                        </p>\n                     </div>\n                  </div>\n                  <div className=\"row mb-1\">\n                     <div className=\"col-4\">\n                        <p className=\"text-muted\">Last attempt:</p>\n                     </div>\n                     <div className=\"col-4\">\n                        <p>\n                           {toDisplayDate(\n                              this.props.editableCard.card.lastAttemptAt,\n                              \"MMM. d, y\"\n                           )}\n                        </p>\n                     </div>\n                  </div>\n                  <div className=\"row mb-1\">\n                     <div className=\"col-4\">\n                        <p className=\"text-muted\">Next attempt:</p>\n                     </div>\n                     <div className=\"col-4\">\n                        <p>\n                           {toDisplayDate(\n                              this.props.editableCard.card.nextAttemptAt,\n                              \"MMM. d, y\"\n                           )}\n                        </p>\n                     </div>\n                  </div>\n                  <div className=\"row mb-1\">\n                     <div className=\"col-4\">\n                        <p className=\"text-muted\">Consecutives:</p>\n                     </div>\n                     <div className=\"col-4\">\n                        <p>\n                           {\n                              this.props.editableCard.card\n                                 .totalSuccessfulAttempts\n                           }\n                        </p>\n                     </div>\n                  </div>\n\n                  <div className=\"custom-control custom-checkbox custom-control-inline float-left mr-0 mt-2\">\n                     <input\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        id=\"isShowingDeleteButton\"\n                        checked={this.state.isShowingDeleteButton} //we are accessing the whole class of Home, then accessing the state of it,\n                        //then accessing the isAdvanced property from the state object\n                        name=\"isShowingDeleteButton\"\n                        value={!this.state.isShowingDeleteButton}\n                        onChange={(e) => {\n                           this.updateState(e);\n                           //again, this refers to the whole component\n                        }}\n                     />\n                     <label\n                        className=\"custom-control-label mb-2 text-muted\"\n                        htmlFor=\"isShowingDeleteButton\"\n                     >\n                        Show delete button\n                     </label>\n                  </div>\n                  <div className=\"clearfix\"></div>\n                  <div className=\"mb-4\">\n                     {this.state.isShowingDeleteButton && (\n                        <button\n                           className=\"btn btn-outline-danger\"\n                           onClick={() => {\n                              this.deleteCard();\n                           }}\n                        >\n                           Delete this card\n                        </button>\n                     )}\n                  </div>\n               </>\n            )}\n         </AppTemplate>\n      );\n   }\n}\n\n//comment\nfunction mapStateToProps(state) {\n   //Everything down here is global state\n   return {\n      //if you need to access something, put it here\n      editableCard: state.editableCard,\n      queue: state.queue,\n   };\n}\n\nexport default connect(mapStateToProps)(Edit);\n"]},"metadata":{},"sourceType":"module"}