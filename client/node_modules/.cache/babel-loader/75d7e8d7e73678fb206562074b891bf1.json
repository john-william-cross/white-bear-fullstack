{"ast":null,"code":"var _jsxFileName = \"/Users/johncross/Desktop/10xCodeCamp/white-bear-fullstack/client/src/component/pages/CreateImagery.js\";\nimport React from \"react\";\nimport saveIcon from \"../../icons/save.svg\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport axios from \"axios\";\nconst memoryCard = memoryCards[3];\nexport default class CreateImagery extends React.Component {\n  constructor(props) {\n    super(props);\n    axios.get(\"https://raw.githubusercontent.com/john-william-cross/white-bear-mpa/b54bf16d605e58a8e356a74f939fc17e46537480/src/mock-data/memory-cards.json\").then(function (response) {\n      // handle success\n      console.log(response);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n    console.log(`in the edit component`);\n    this.state = {\n      answerText: memoryCard.answer,\n      imageryText: \"\"\n    };\n  }\n\n  checkHasInvalidCharCount() {\n    if (this.state.imageryText.length > MAX_CARD_CHARS || this.state.imageryText.length === 0) {\n      return true;\n    } else return false;\n  }\n\n  setImageryText(e) {\n    this.setState({\n      imageryText: e.target.value\n    });\n    console.log(e.target, e.target.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AppTemplate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center lead text-muted my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Add memorable imagery\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-primary lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"6\",\n      id: \"create-imagery-input\",\n      autoFocus: true,\n      defaultValue: \"\" //should this be blank string or memoryCard.imagery??\n      ,\n      onChange: e => this.setImageryText(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body bg-secondary lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    }, \"One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could se\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted float-right mt-2 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classnames({\n        \"text-danger\": checkIsOver(this.state.imageryText, MAX_CARD_CHARS)\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    }, console.log(this.state.imageryText.length), this.state.imageryText.length, \"/\", MAX_CARD_CHARS)), \" \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"create-answer\",\n      className: \"btn btn-link\",\n      id: \"back-to-answer-error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Back to answer\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/all-cards\",\n      className: classnames(\"btn btn-primary btn-lg float-right\", {\n        disabled: this.checkHasInvalidCharCount()\n      }),\n      id: \"save-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: saveIcon,\n      alt: \"\",\n      width: \"20px\",\n      style: {\n        marginBottom: \"3px\",\n        marginRight: \"4px\",\n        marginLeft: \"-5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }\n    }), \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/johncross/Desktop/10xCodeCamp/white-bear-fullstack/client/src/component/pages/CreateImagery.js"],"names":["React","AppTemplate","memoryCards","Link","classnames","checkIsOver","MAX_CARD_CHARS","axios","memoryCard","CreateImagery","Component","constructor","props","get","then","response","console","log","catch","error","state","answerText","answer","imageryText","checkHasInvalidCharCount","length","setImageryText","e","setState","target","value","render","disabled","saveIcon","marginBottom","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport saveIcon from \"../../icons/save.svg\";\nimport AppTemplate from \"../ui/AppTemplate\";\nimport memoryCards from \"../../mock-data/memory-cards\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { checkIsOver, MAX_CARD_CHARS } from \"../../utils/helpers\";\nimport axios from \"axios\";\n\nconst memoryCard = memoryCards[3];\n\nexport default class CreateImagery extends React.Component {\n   constructor(props) {\n      super(props);\n      axios\n         .get(\n            \"https://raw.githubusercontent.com/john-william-cross/white-bear-mpa/b54bf16d605e58a8e356a74f939fc17e46537480/src/mock-data/memory-cards.json\"\n         )\n         .then(function (response) {\n            // handle success\n            console.log(response);\n         })\n         .catch(function (error) {\n            // handle error\n            console.log(error);\n         });\n      console.log(`in the edit component`);\n      this.state = {\n         answerText: memoryCard.answer,\n         imageryText: \"\",\n      };\n   }\n   checkHasInvalidCharCount() {\n      if (\n         this.state.imageryText.length > MAX_CARD_CHARS ||\n         this.state.imageryText.length === 0\n      ) {\n         return true;\n      } else return false;\n   }\n   setImageryText(e) {\n      this.setState({ imageryText: e.target.value });\n\n      console.log(e.target, e.target.value);\n   }\n\n   render() {\n      return (\n         <AppTemplate>\n            <p className=\"text-center lead text-muted my-2\">\n               Add memorable imagery\n            </p>\n            <div className=\"card\">\n               <div className=\"card-body bg-primary lead\">\n                  <textarea\n                     rows=\"6\"\n                     id=\"create-imagery-input\"\n                     autoFocus={true}\n                     defaultValue={\"\"} //should this be blank string or memoryCard.imagery??\n                     onChange={(e) => this.setImageryText(e)}\n                  ></textarea>\n               </div>\n            </div>\n            <div className=\"card\">\n               <div className=\"card-body bg-secondary lead\">\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could se\n               </div>\n            </div>\n            <p className=\"text-muted float-right mt-2 mb-5\">\n               <span\n                  className={classnames({\n                     \"text-danger\": checkIsOver(\n                        this.state.imageryText,\n                        MAX_CARD_CHARS\n                     ),\n                  })}\n               >\n                  {console.log(this.state.imageryText.length)}\n                  {this.state.imageryText.length}/{MAX_CARD_CHARS}\n               </span>\n            </p>{\" \"}\n            <div className=\"clearfix\"></div>\n            <Link\n               to=\"create-answer\"\n               className=\"btn btn-link\"\n               id=\"back-to-answer-error\"\n            >\n               Back to answer\n            </Link>\n            <Link\n               to=\"/all-cards\"\n               className={classnames(\"btn btn-primary btn-lg float-right\", {\n                  disabled: this.checkHasInvalidCharCount(),\n               })}\n               id=\"save-card\"\n            >\n               <img\n                  src={saveIcon}\n                  alt=\"\"\n                  width=\"20px\"\n                  style={{\n                     marginBottom: \"3px\",\n                     marginRight: \"4px\",\n                     marginLeft: \"-5px\",\n                  }}\n               />\n               Save\n            </Link>\n         </AppTemplate>\n      );\n   }\n}\n"]},"metadata":{},"sourceType":"module"}